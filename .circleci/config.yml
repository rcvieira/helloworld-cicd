version: 2.1
jobs:
  build-stage:
    docker:
      - image: circleci/openjdk:11-jdk-stretch
    environment:
      - PORT: 8080
      - POSTGRES_USER: cicd
      - POSTGRES_PASSWORD: pwd0123456789
      - POSTGRES_DB: helloworld-cicd-db
      - APP_HOST_URL: helloworld-cicd  
    steps:
      - checkout
      
      - restore_cache:
          key: helloworld-cicd-{{ checksum "pom.xml" }}
      
      - run:
          name: Build
          command: |
            echo 'Compilando...'
            mvn clean package -DskipTests

      - run:
          name: Unit Tests
          command: |
            echo 'Testando...'
            mvn test

      - run: 
          name: Quality - Analyze on SonarCloud
          command: mvn verify -DskipTests=true sonar:sonar -Dsonar.projectKey=rcvieira_helloworld-cicd -Dsonar.organization=rcvieira -Dsonar.host.url=https://sonarcloud.io

      - store_test_results:
          path: target/surefire-reports

      - setup_remote_docker

      - run:
          name: Acceptance Tests - Run App & Tests
          command: |
            docker network create testeNet
            # RUN Postgresql container
            docker run --name db --network=testeNet --rm -d -e POSTGRES_USER -e POSTGRES_PASSWORD -e POSTGRES_DB -p 54320:5432 postgres:11
            # BUILD AND RUN App container
            docker build -t helloworld-cicd:latest .
            docker run --network=testeNet --name ${APP_HOST_URL} --rm -d -e PORT -p 8080:$PORT/tcp helloworld-cicd:latest
            # BUILD AND RUN Test container
            docker create -v /root --name configs alpine:3.4 /bin/true
            docker cp ~/.m2 configs:/root/.m2
            docker cp ~/project configs:/root/project
            docker run --network=testeNet --name ITTests --volumes-from configs -e APP_HOST_URL -e PORT -w /root/project maven:3.6.2-jdk-11-openj9 mvn -DskipUTs=true -DargLine="-DAPP_HOST_URL=${APP_HOST_URL} -DPORT=${PORT}" verify

      - save_cache:
          paths:
            - ~/.m2
          key: helloworld-cicd-{{ checksum "pom.xml" }}

      - store_test_results:
          path: target/failsafe-reports

      - run:
          name: Deploy - Install Heroku CLI
          command: |
            set -x
            curl -L -o /tmp/heroku-install.sh https://cli-assets.heroku.com/install.sh
            sh /tmp/heroku-install.sh
            heroku --version
      
      - run:
          name: Deploy - Install to Heroku
          command: |
            docker login --username=$HEROKU_LOGIN --password=$HEROKU_API_KEY registry.heroku.com
            heroku container:push web -a $HEROKU_APP_NAME
            heroku container:release web -a $HEROKU_APP_NAME
workflows:
  version: 2
  workflow-principal:
    jobs:
      - build-stage:
          context: SonarCloud